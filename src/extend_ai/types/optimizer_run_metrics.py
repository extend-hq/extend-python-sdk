# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.serialization import FieldMetadata
from ..core.unchecked_base_model import UncheckedBaseModel
from .optimizer_run_metrics_fields_item import OptimizerRunMetricsFieldsItem


class OptimizerRunMetrics(UncheckedBaseModel):
    overall_accuracy: typing_extensions.Annotated[float, FieldMetadata(alias="overallAccuracy")] = pydantic.Field()
    """
    Overall accuracy across all fields/classifications
    """

    fields: typing.List[OptimizerRunMetricsFieldsItem] = pydantic.Field()
    """
    Per-field or per-classification accuracy metrics.
    For `EXTRACT_OPTIMIZER`: each entry represents a field in the schema.
    For `CLASSIFY_OPTIMIZER`: each entry represents a classification category.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
